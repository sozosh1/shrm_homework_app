import 'package:injectable/injectable.dart';
import 'package:shrm_homework_app/core/database/app_database.dart';
import 'package:shrm_homework_app/core/services/connectivity_service.dart';
import 'package:shrm_homework_app/features/category/domain/repository/category_repository.dart';
import 'package:talker_flutter/talker_flutter.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
@injectable
class InitializationService {
  final CategoryRepository _categoryRepository;
  final ConnectivityService _connectivityService;
  final AppDatabase _database;
  final Talker _talker;

  InitializationService(
    this._categoryRepository,
    this._connectivityService,
    this._database,
    this._talker,
  );

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ API –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
  Future<void> initializeCategories() async {
    try {
      _talker.info('üöÄ InitializationService: –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –±–∞–∑–µ
      final existingCategories = await _categoryRepository.getAllCategories();
      
      if (existingCategories.isEmpty) {
        _talker.info('üìÇ InitializationService: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –∑–∞–≥—Ä—É–∂–∞–µ–º —Å API');
        
        if (await _connectivityService.isConnected) {
          try {
            // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å API
            final apiCategories = await _categoryRepository.getAllCategories();
            if (apiCategories.isNotEmpty) {
              _talker.info('‚úÖ InitializationService: –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${apiCategories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å API');
            } else {
              _talker.info('üìÇ InitializationService: API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
              await _insertFallbackCategories();
            }
          } catch (e) {
            _talker.warning('‚ö†Ô∏è InitializationService: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å API', e);
            await _insertFallbackCategories();
          }
        } else {
          _talker.info('üì± InitializationService: –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
          await _insertFallbackCategories();
        }
      } else {
        _talker.info('‚úÖ InitializationService: –ù–∞–π–¥–µ–Ω–æ ${existingCategories.length} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
      }
    } catch (e, st) {
      _talker.error('‚ùå InitializationService: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π', e, st);
      await _insertFallbackCategories();
    }
  }

  /// –í—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å API
  Future<void> _insertFallbackCategories() async {
    try {
      _talker.info('üìù InitializationService: –í—Å—Ç–∞–≤–ª—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –º–µ—Ç–æ–¥ –∏–∑ AppDatabase
      await _database.insertFallbackCategories();
      
      _talker.info('‚úÖ InitializationService: –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã');
    } catch (e, st) {
      _talker.error('‚ùå InitializationService: –û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π', e, st);
      rethrow;
    }
  }
}
